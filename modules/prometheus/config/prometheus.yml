# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    #scrape_interval: 5s

    static_configs:
      - targets: ['localhost:9090']

  - job_name: 'linux'
    static_configs:
      - targets: ['localhost:9100']
        labels:
          instance: bigdata-extsvr-monitor01

  - job_name: 'bigdata'
    scrape_interval: 15s
    static_configs:
      #target 可以使用 "," 分割,添加多个目标
      - targets: ['bigdata-cmpt-128-53:9100', 'bigdata-cmpt-128-52:9100']
        labels:
          group: "cmpt"


  - job_name: 'mysql'
    scrape_interval: 30s
    static_configs:
      - targets: ['bigdata-extsvr-db_bi1:9104']
        labels:
          group: "db"
    params:
      collect[]:
        - perf_schema.tableiowaits
        - perf_schema.indexiowaits
        - perf_schema.tablelocks

#  - job_name: 'mysql'
#    scrape_interval: 60s
#    static_configs:
#      - targets: ['bigdata-extsvr-db_bi1:9104']
#        labels:
#          group: "db"
#    params:
#      collect[]:
#        - slave_status

#    file_sd_configs:
#      - files:
#        - /usr/local/prometheus/conf/bigdata.json

